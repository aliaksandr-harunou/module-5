{
  "stats": {
    "suites": 4,
    "tests": 22,
    "passes": 22,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-14T10:04:49.396Z",
    "end": "2021-11-14T10:04:49.413Z",
    "duration": 17,
    "testsRegistered": 22,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "caf666fc-b25c-44a6-8ab9-88b1b5981f14",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "40ae2278-6afc-47b4-bbab-449758259610",
          "title": "positive tests for addition",
          "fullFile": "C:\\Users\\Aliaksandr_Harunou\\Desktop\\Education\\Automation JS task\\module 5\\module-5\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"positive tests for addition\"",
              "fullTitle": "positive tests for addition \"before each\" hook in \"positive tests for addition\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = new Calculator();",
              "err": {},
              "uuid": "855f17c5-505f-4af3-9c94-df640c0ab843",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"positive tests for addition\"",
              "fullTitle": "positive tests for addition \"after each\" hook in \"positive tests for addition\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = null;",
              "err": {},
              "uuid": "0c8dc593-cd8a-4dce-bd71-a1b212c5679a",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "shoud return summ of positive integer numbers",
              "fullTitle": "positive tests for addition shoud return summ of positive integer numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.add(4, 3, 6)).to.be.equal(13);",
              "err": {},
              "uuid": "b6cca868-c24d-4feb-9e6e-aaf27330deaf",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of negative integer numbers",
              "fullTitle": "positive tests for addition shoud return summ of negative integer numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.add(-5, -5, -10, -100)).to.be.equal(-120);",
              "err": {},
              "uuid": "fdd1059a-43ed-4865-adab-219719e5ee08",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of positive decimal numbers",
              "fullTitle": "positive tests for addition shoud return summ of positive decimal numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.add(5.2, 5.5, 10.00, 11.1111)).to.be.equal(31.8111);",
              "err": {},
              "uuid": "44f60d6b-801e-409d-8f0c-3adf9c5146bd",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of negative decimal numbers",
              "fullTitle": "positive tests for addition shoud return summ of negative decimal numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.add(-50.2, -51.5, -0.11)).to.be.equal(-101.81);",
              "err": {},
              "uuid": "f43ea1c3-de2f-4c58-998c-bd6d7ab66969",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of negative and positive numbers",
              "fullTitle": "positive tests for addition shoud return summ of negative and positive numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.add(-50.2, -51.5, 50.2, 100.5, 2000, 0, 0.000))\n    .to.be.equal(2049.000);",
              "err": {},
              "uuid": "7a3da0e3-bcb3-4d8f-a4c7-402a5809ca29",
              "parentUUID": "40ae2278-6afc-47b4-bbab-449758259610",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6cca868-c24d-4feb-9e6e-aaf27330deaf",
            "fdd1059a-43ed-4865-adab-219719e5ee08",
            "44f60d6b-801e-409d-8f0c-3adf9c5146bd",
            "f43ea1c3-de2f-4c58-998c-bd6d7ab66969",
            "7a3da0e3-bcb3-4d8f-a4c7-402a5809ca29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d2ff339-8c70-4b3d-97fc-871278da6184",
          "title": "negative tests for addition",
          "fullFile": "C:\\Users\\Aliaksandr_Harunou\\Desktop\\Education\\Automation JS task\\module 5\\module-5\\test\\specs\\add.spec.js",
          "file": "\\test\\specs\\add.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"negative tests for addition\"",
              "fullTitle": "negative tests for addition \"before each\" hook in \"negative tests for addition\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = new Calculator();",
              "err": {},
              "uuid": "94ab33f8-9dda-44db-8aea-9b6a42de6655",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"negative tests for addition\"",
              "fullTitle": "negative tests for addition \"after each\" hook in \"negative tests for addition\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = null;",
              "err": {},
              "uuid": "bdf40c6a-3d35-4aba-b8ca-f3b049338934",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "shoud return error if one of the provided parameter is string",
              "fullTitle": "negative tests for addition shoud return error if one of the provided parameter is string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.add(4, '36');\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "cc72be4f-f93b-4f91-92b2-b25f01145ab7",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is object",
              "fullTitle": "negative tests for addition shoud return error if one of the provided parameter is object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.add(4, {a: 6, b: 7});\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "6ef95711-561e-4cb3-a3f9-5757fd6182c8",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is array",
              "fullTitle": "negative tests for addition shoud return error if one of the provided parameter is array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.add(4, [6, 7, 8]);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "b0cffeaa-dbc5-4430-b28a-e0a2f75dcb2b",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is NULL",
              "fullTitle": "negative tests for addition shoud return error if one of the provided parameter is NULL",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.add(4, null);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "2d7b8c9b-b274-47cd-8d27-f17b78f4e82a",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is boolean",
              "fullTitle": "negative tests for addition shoud return error if one of the provided parameter is boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.add(4, true, false);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "c353cb18-8709-4d0b-a09c-03416c5539ea",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is undefined",
              "fullTitle": "negative tests for addition shoud return error if one of the provided parameter is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.add(4, undefined);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "04dfae4d-b41a-4412-84ca-b50291028e2e",
              "parentUUID": "6d2ff339-8c70-4b3d-97fc-871278da6184",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc72be4f-f93b-4f91-92b2-b25f01145ab7",
            "6ef95711-561e-4cb3-a3f9-5757fd6182c8",
            "b0cffeaa-dbc5-4430-b28a-e0a2f75dcb2b",
            "2d7b8c9b-b274-47cd-8d27-f17b78f4e82a",
            "c353cb18-8709-4d0b-a09c-03416c5539ea",
            "04dfae4d-b41a-4412-84ca-b50291028e2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c9b12244-322a-4873-ac5d-8132e4beda06",
          "title": "positive tests for multiplication",
          "fullFile": "C:\\Users\\Aliaksandr_Harunou\\Desktop\\Education\\Automation JS task\\module 5\\module-5\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"positive tests for multiplication\"",
              "fullTitle": "positive tests for multiplication \"before each\" hook in \"positive tests for multiplication\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = new Calculator();",
              "err": {},
              "uuid": "04928958-487c-43aa-b22e-4ee1d7228414",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"positive tests for multiplication\"",
              "fullTitle": "positive tests for multiplication \"after each\" hook in \"positive tests for multiplication\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = null;",
              "err": {},
              "uuid": "0c0a571e-cfad-44e2-b9c3-04f9e77ec6d8",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "shoud return summ of positive integer numbers",
              "fullTitle": "positive tests for multiplication shoud return summ of positive integer numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.multiply(4, 3, 6)).to.be.equal(4*3*6);",
              "err": {},
              "uuid": "cc2fd0b5-4807-416a-bdbb-ec3f5e5b8475",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of negative integer numbers",
              "fullTitle": "positive tests for multiplication shoud return summ of negative integer numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.multiply(-5, -5, -10, -100)).to.be.equal(-5 * -5 * -10 * -100);",
              "err": {},
              "uuid": "2c5e50df-7fea-4afb-b8e9-b3f749fcbfe9",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of positive decimal numbers",
              "fullTitle": "positive tests for multiplication shoud return summ of positive decimal numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.multiply(5.2, 5.5, 10.00, 11.1111)).to.be.equal(5.2 * 5.5 * 10.00 * 11.1111);",
              "err": {},
              "uuid": "fbc41d4b-6758-43c9-be70-df2a06df9c87",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of negative decimal numbers",
              "fullTitle": "positive tests for multiplication shoud return summ of negative decimal numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.multiply(-50.2, -51.5, -0.11)).to.be.equal(-50.2 * -51.5 * -0.11);",
              "err": {},
              "uuid": "f8c861a3-424d-484b-a523-26fad5be68cc",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return summ of negative and positive numbers",
              "fullTitle": "positive tests for multiplication shoud return summ of negative and positive numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calc.multiply(-50.2, -51.5, 50.2, 100.5, 2000, 0, 0.000))\n    .to.be.equal(0);",
              "err": {},
              "uuid": "64b1d926-93a6-4de0-8501-9770a99266ba",
              "parentUUID": "c9b12244-322a-4873-ac5d-8132e4beda06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc2fd0b5-4807-416a-bdbb-ec3f5e5b8475",
            "2c5e50df-7fea-4afb-b8e9-b3f749fcbfe9",
            "fbc41d4b-6758-43c9-be70-df2a06df9c87",
            "f8c861a3-424d-484b-a523-26fad5be68cc",
            "64b1d926-93a6-4de0-8501-9770a99266ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "352f9f76-ad04-48a3-abca-c29d36e2c107",
          "title": "negative tests for multiplication",
          "fullFile": "C:\\Users\\Aliaksandr_Harunou\\Desktop\\Education\\Automation JS task\\module 5\\module-5\\test\\specs\\multiply.spec.js",
          "file": "\\test\\specs\\multiply.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"negative tests for multiplication\"",
              "fullTitle": "negative tests for multiplication \"before each\" hook in \"negative tests for multiplication\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = new Calculator();",
              "err": {},
              "uuid": "ad0baeaa-580f-4f04-b957-70a277e0dcf9",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"negative tests for multiplication\"",
              "fullTitle": "negative tests for multiplication \"after each\" hook in \"negative tests for multiplication\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calc = null;",
              "err": {},
              "uuid": "b708d2ba-a18b-4a67-a35c-8703169fbe21",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "shoud return error if one of the provided parameter is string",
              "fullTitle": "negative tests for multiplication shoud return error if one of the provided parameter is string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.multiply(4, '36');\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "185a17ff-38e5-4329-b888-4b590b97e9e7",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is object",
              "fullTitle": "negative tests for multiplication shoud return error if one of the provided parameter is object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.multiply(4, {a: 6, b: 7});\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "73d0c4a6-e6bc-4a14-9e43-bb6ea03305ab",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is array",
              "fullTitle": "negative tests for multiplication shoud return error if one of the provided parameter is array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.multiply(4, [6, 7, 8]);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "3ad98459-5186-4448-9d77-87fd8e15e60f",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is NULL",
              "fullTitle": "negative tests for multiplication shoud return error if one of the provided parameter is NULL",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.multiply(4, null);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "4471d324-268f-4a6c-ad22-0bdc118676b6",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is boolean",
              "fullTitle": "negative tests for multiplication shoud return error if one of the provided parameter is boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.multiply(4, true, false);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "ea9574e9-5dec-43ba-ab98-5fd2dd6626fe",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoud return error if one of the provided parameter is undefined",
              "fullTitle": "negative tests for multiplication shoud return error if one of the provided parameter is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const callWithErr = () => calc.multiply(4, undefined);\nexpect(callWithErr).to.throw(`One of the provided value is not in the list of allowed data types`);",
              "err": {},
              "uuid": "e6ce300f-9b35-44b6-920f-5597e4add51d",
              "parentUUID": "352f9f76-ad04-48a3-abca-c29d36e2c107",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "185a17ff-38e5-4329-b888-4b590b97e9e7",
            "73d0c4a6-e6bc-4a14-9e43-bb6ea03305ab",
            "3ad98459-5186-4448-9d77-87fd8e15e60f",
            "4471d324-268f-4a6c-ad22-0bdc118676b6",
            "ea9574e9-5dec-43ba-ab98-5fd2dd6626fe",
            "e6ce300f-9b35-44b6-920f-5597e4add51d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}